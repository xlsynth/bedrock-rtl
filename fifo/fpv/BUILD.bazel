# Copyright 2024-2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:br_verilog.bzl", "br_verilog_fpv_test_tools_suite")
load("//bazel:verilog.bzl", "verilog_elab_test")

package(default_visibility = ["//visibility:public"])

# Basic FIFO checkers
verilog_library(
    name = "br_fifo_basic_fpv_monitor",
    srcs = ["br_fifo_basic_fpv_monitor.sv"],
)

verilog_library(
    name = "br_fifo_shared_dynamic_basic_fpv_monitor",
    srcs = ["br_fifo_shared_dynamic_basic_fpv_monitor.sv"],
    deps = [
        "//pkg:br_math_pkg",
    ],
)

# credit_receiver checkers
verilog_library(
    name = "br_credit_receiver_fpv_monitor",
    srcs = ["br_credit_receiver_fpv_monitor.sv"],
)

# FIFO Controller (1R1W, Push Ready/Valid, Pop Ready/Valid Variant)

verilog_library(
    name = "br_fifo_ctrl_1r1w_fpv_monitor",
    srcs = ["br_fifo_ctrl_1r1w_fpv_monitor.sv"],
    deps = [
        ":br_fifo_basic_fpv_monitor",
        "//fifo/rtl:br_fifo_ctrl_1r1w",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_fifo_ctrl_1r1w_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_fifo_ctrl_1r1w_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_fifo_ctrl_1r1w_test_suite",
    params = {
        "Depth": [
            "2",
            "5",
            "6",
        ],
        "EnableBypass": [
            "1",
            "0",
        ],
        "RamReadLatency": [
            "2",
            "1",
            "0",
        ],
        "RegisterPopOutputs": [
            "1",
            "0",
        ],
        "Width": [
            "1",
            "5",
            "6",
        ],
    },
    tools = {
        "jg": "br_fifo_ctrl_1r1w_fpv.jg.tcl",
        "vcf": "",
    },
    top = "br_fifo_ctrl_1r1w",
    deps = [":br_fifo_ctrl_1r1w_fpv_monitor"],
)

# FIFO (Internal 1R1W Flop-RAM, Push Ready/Valid, Pop Ready/Valid Variant)
verilog_library(
    name = "br_fifo_flops_fpv_monitor",
    srcs = ["br_fifo_flops_fpv_monitor.sv"],
    deps = [
        ":br_fifo_basic_fpv_monitor",
        "//fifo/rtl:br_fifo_flops",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_fifo_flops_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_fifo_flops_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_fifo_flops_test_suite",
    params = {
        "Depth": [
            "2",
            "5",
            "6",
        ],
        "EnableBypass": [
            "1",
            "0",
        ],
        "RegisterPopOutputs": [
            "1",
            "0",
        ],
        "Width": [
            "1",
            "5",
            "6",
        ],
    },
    tools = {
        "jg": "br_fifo_flops_fpv.jg.tcl",
        "vcf": "",
    },
    top = "br_fifo_flops",
    deps = [":br_fifo_flops_fpv_monitor"],
)

# FIFO Controller (1R1W, Push Credit/Valid, Pop Ready/Valid Variant)
verilog_library(
    name = "br_fifo_ctrl_1r1w_push_credit_fpv_monitor",
    srcs = ["br_fifo_ctrl_1r1w_push_credit_fpv_monitor.sv"],
    deps = [
        ":br_credit_receiver_fpv_monitor",
        ":br_fifo_ctrl_1r1w_fpv_monitor",
        "//fifo/rtl:br_fifo_ctrl_1r1w_push_credit",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_fifo_ctrl_1r1w_push_credit_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_fifo_ctrl_1r1w_push_credit_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_fifo_ctrl_1r1w_push_credit_test_suite",
    params = {
        "Depth": [
            "2",
            "5",
            "6",
        ],
        "EnableBypass": [
            "1",
            "0",
        ],
        "RamReadLatency": [
            "2",
            "1",
            "0",
        ],
        "RegisterPopOutputs": [
            "1",
            "0",
        ],
        "RegisterPushOutputs": [
            "1",
            "0",
        ],
        "Width": [
            "1",
            "5",
            "6",
        ],
    },
    tools = {
        "jg": "br_fifo_ctrl_1r1w_push_credit_fpv.jg.tcl",
        "vcf": "",
    },
    top = "br_fifo_ctrl_1r1w_push_credit",
    deps = [":br_fifo_ctrl_1r1w_push_credit_fpv_monitor"],
)

# Bedrock-RTL FIFO (Internal 1R1W Flop-RAM, Push Credit/Valid, Pop Ready/Valid Variant)
verilog_library(
    name = "br_fifo_flops_push_credit_fpv_monitor",
    srcs = ["br_fifo_flops_push_credit_fpv_monitor.sv"],
    deps = [
        ":br_credit_receiver_fpv_monitor",
        ":br_fifo_flops_fpv_monitor",
        "//fifo/rtl:br_fifo_flops_push_credit",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_fifo_flops_push_credit_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_fifo_flops_push_credit_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_fifo_flops_push_credit_test_suite",
    params = {
        "Depth": [
            "2",
            "5",
            "6",
        ],
        "EnableBypass": [
            "1",
            "0",
        ],
        "RegisterPopOutputs": [
            "1",
            "0",
        ],
        "RegisterPushOutputs": [
            "1",
            "0",
        ],
        "Width": [
            "1",
            "5",
            "6",
        ],
    },
    tools = {
        "jg": "br_fifo_flops_push_credit_fpv.jg.tcl",
        "vcf": "",
    },
    top = "br_fifo_flops_push_credit",
    deps = [":br_fifo_flops_push_credit_fpv_monitor"],
)

# Bedrock-RTL Shared Dynamic Multi-FIFO with Flop-based Storage (Push Valid/Ready Interface)
verilog_library(
    name = "br_fifo_shared_dynamic_flops_fpv_monitor",
    srcs = ["br_fifo_shared_dynamic_flops_fpv_monitor.sv"],
    deps = [
        ":br_fifo_shared_dynamic_basic_fpv_monitor",
        "//fifo/rtl:br_fifo_shared_dynamic_flops",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_fifo_shared_dynamic_flops_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_fifo_shared_dynamic_flops_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_fifo_shared_dynamic_flops_test_suite",
    #TODO: temp check in to debug
    gui = True,
    #custom_tcl_body = "br_fifo_shared_dynamic_flops_fpv.jg.tcl",
    #illegal_param_combinations = {
    #    (
    #        "EnableCoverPushBackpressure",
    #        "EnableAssertPushValidStability",
    #        "EnableAssertPushDataStability",
    #    ): [
    #        ("0", "0", "1"),
    #        ("0", "1", "0"),
    #        ("0", "1", "1"),
    #        ("1", "0", "1"),
    #    ],
    #},
    params = {
        #"Depth": [
        #    "3",
        #    "5",
        #    "8",
        #],
        #"EnableAssertPushDataStability": [
        #    "0",
        #    "1",
        #],
        #"EnableAssertPushValidStability": [
        #    "0",
        #    "1",
        #],
        #"EnableCoverPushBackpressure": [
        #    "0",
        #    "1",
        #],
        "NumFifos": [
            "1",
            "2",
            "3",
        ],
        #"NumReadPorts": [
        #    "1",
        #    "2",
        #    "4",
        #],
        #"NumWritePorts": [
        #    "1",
        #    "2",
        #    "3",
        #],
        #"RegisterDeallocation": [
        #    "1",
        #    "0",
        #],
        #"RegisterPopOutputs": [
        #    "1",
        #    "0",
        #],
        #"StagingBufferDepth": [
        #    "1",
        #    "2",
        #],
        #"Width": [
        #    "1",
        #    "2",
        #],
    },
    tools = {
        "jg": "",
        "vcf": "",
    },
    top = "br_fifo_shared_dynamic_flops",
    deps = [":br_fifo_shared_dynamic_flops_fpv_monitor"],
)
