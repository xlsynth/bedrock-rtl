# Copyright 2024-2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
This module defines the Bazel Module (bzlmod) configuration for the Bedrock-RTL project.
"""

module(
    name = "bedrock-rtl",
    version = "0.0.1",
)

rules_hdl_extension = use_extension("//dependency_support/rules_hdl:extension.bzl", "rules_hdl_extension")
use_repo(rules_hdl_extension, "rules_hdl")

bazel_dep(name = "stardoc", version = "0.8.0")
bazel_dep(name = "rules_python", version = "1.2.0-rc0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(python_version = "3.12")
use_repo(python, "python_3_12", "python_versions", "pythons_hub")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

# The requirements_lock_3_12.txt file is auto-generated from requirements_3_12.in and statically checked in.
# To regenerate it, run `bazel run //:requirements_3_12.update`.
pip.parse(
    # Hub names must be unique across Bazel modules. To avoid problems when integrating
    # this module with others, namespace the hub name using the git repo name.
    hub_name = "bedrock-rtl-pypi",
    # We need to use the same version here as in the `python.toolchain` call.
    python_version = "3.12",
    requirements_lock = "//:requirements_lock_3_12.txt",
)
use_repo(pip, "bedrock-rtl-pypi")

# Rust toolchain and TopStitch dependencies
bazel_dep(name = "rules_rust", version = "0.57.1")

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")

# See https://bazelbuild.github.io/rules_rust/#specifying-rust-version.
rust.toolchain(
    edition = "2021",
    versions = ["1.84.1"],
)
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

RUST_TARGET_TRIPLES = [
    "x86_64-unknown-linux-gnu",
]

bedrock_stitch_crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
bedrock_stitch_crate.from_cargo(
    name = "bedrock_stitch",
    cargo_lockfile = "//stitch:Cargo.lock",
    isolated = False,  # Allow caching via the local Cargo cache.
    manifests = ["//stitch:Cargo.toml"],
    supported_platform_triples = RUST_TARGET_TRIPLES,
)
use_repo(bedrock_stitch_crate, "bedrock_stitch")
