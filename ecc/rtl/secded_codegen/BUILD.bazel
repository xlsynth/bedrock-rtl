# SPDX-License-Identifier: Apache-2.0

load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

package(default_visibility = ["//visibility:public"])

py_binary(
    name = "secded_codegen",
    srcs = ["secded_codegen.py"],
    deps = [
        "@bedrock-rtl-pypi//jinja2:pkg",
        "@eccgen//eccgen:matrix_parser",
    ],
)

# Diff test and codegen
diff_test(
    name = "br_ecc_secded_encoder_diff_test",
    failure_message = """
        Golden //ecc/rtl:br_ecc_secded_encoder.sv does not match the generated code.
        Please run `bazel run //ecc/rtl/secded_codegen:update_golden` to automatically update the golden.
    """,
    file1 = "//ecc/rtl:br_ecc_secded_encoder.sv",
    file2 = ":gen_br_ecc_secded_encoder.sv",
)

diff_test(
    name = "br_ecc_secded_decoder_diff_test",
    failure_message = """
        Golden //ecc/rtl:br_ecc_secded_decoder.sv does not match the generated code.
        Please run `bazel run //ecc/rtl/secded_codegen:update_golden` to automatically update the golden.
    """,
    file1 = "//ecc/rtl:br_ecc_secded_decoder.sv",
    file2 = ":gen_br_ecc_secded_decoder.sv",
)

genrule(
    name = "gen_secded",
    srcs = [
        ":br_ecc_secded_encoder.sv.jinja2",
        ":br_ecc_secded_decoder.sv.jinja2",
        "@eccgen//eccgen/matrices",
    ],
    outs = [
        "gen_br_ecc_secded_encoder.sv",
        "gen_br_ecc_secded_decoder.sv",
    ],
    cmd = """
set -eu
M="$(@D)/matrices"
mkdir -p "$$M"
cp $(locations @eccgen//eccgen/matrices:matrices) "$$M"
$(execpath //ecc/rtl/secded_codegen) \
  --matrix-dir "$$M" \
  --encoder-template $(execpath :br_ecc_secded_encoder.sv.jinja2) \
  --encoder-output $(@D)/gen_br_ecc_secded_encoder.sv \
  --decoder-template $(execpath :br_ecc_secded_decoder.sv.jinja2) \
  --decoder-output $(@D)/gen_br_ecc_secded_decoder.sv
""",
    tools = ["//ecc/rtl/secded_codegen"],
)

write_file(
    name = "gen_update_golden",
    out = "update_golden.sh",
    content = [
        "#!/usr/bin/env bash",
        "cd $BUILD_WORKSPACE_DIRECTORY",
        "cp -fv bazel-bin/ecc/rtl/secded_codegen/gen_br_ecc_secded_encoder.sv ecc/rtl/br_ecc_secded_encoder.sv",
        "cp -fv bazel-bin/ecc/rtl/secded_codegen/gen_br_ecc_secded_decoder.sv ecc/rtl/br_ecc_secded_decoder.sv",
    ],
)

sh_binary(
    name = "update_golden",
    srcs = [":update_golden.sh"],
    data = [
        ":gen_br_ecc_secded_decoder.sv",
        ":gen_br_ecc_secded_encoder.sv",
        "//ecc/rtl:br_ecc_secded_decoder.sv",
        "//ecc/rtl:br_ecc_secded_encoder.sv",
    ],
)
