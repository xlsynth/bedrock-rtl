# Copyright 2024-2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:br_verilog.bzl", "br_verilog_fpv_test_tools_suite")
load("//bazel:verilog.bzl", "verilog_elab_test")

package(default_visibility = ["//visibility:public"])

#################################################################
# Bedrock-RTL Single-Error-Detecting (SED - Even Parity)

verilog_library(
    name = "br_ecc_sed_fpv_monitor",
    srcs = ["br_ecc_sed_fpv_monitor.sv"],
    deps = [
        "//ecc/rtl:br_ecc_sed_decoder",
        "//ecc/rtl:br_ecc_sed_encoder",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_ecc_sed_fpv_monitor_elab_test",
    tool = "verific",
    deps = [":br_ecc_sed_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_ecc_sed_test_suite",
    params = {
        "DataWidth": [
            "1",
            "5",
            "6",
        ],
        "DecRegisterInputs": [
            "1",
            "0",
        ],
        "DecRegisterOutputs": [
            "1",
            "0",
        ],
        "EncRegisterInputs": [
            "1",
            "0",
        ],
        "EncRegisterOutputs": [
            "1",
            "0",
        ],
    },
    tools = {
        "jg": "br_ecc_sed_fpv.jg.tcl",
        "vcf": "",
    },
    top = "br_ecc_sed_fpv_monitor",
    deps = [":br_ecc_sed_fpv_monitor"],
)

#################################################################
# Bedrock-RTL Single-Error-Correcting, Double-Error-Detecting (SECDED - Hsiao)
# no ecc error set up

verilog_library(
    name = "br_ecc_secded_fpv_monitor",
    srcs = ["br_ecc_secded_fpv_monitor.sv"],
    deps = [
        "//ecc/rtl:br_ecc_secded_decoder",
        "//ecc/rtl:br_ecc_secded_encoder",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_ecc_secded_fpv_monitor_elab_test",
    tool = "verific",
    deps = [":br_ecc_secded_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_ecc_secded_test_dw4",
    elab_opts = ["-parameter DataWidth 4"],
    params = {
        "DecRegisterInputs": [
            "1",
            "0",
        ],
        "DecRegisterOutputs": [
            "1",
            "0",
        ],
        "EncRegisterInputs": [
            "1",
            "0",
        ],
        "EncRegisterOutputs": [
            "1",
            "0",
        ],
        "RegisterSyndrome": [
            "1",
            "0",
        ],
    },
    tools = {
        "jg": "br_ecc_secded_fpv.jg.tcl",
        "vcf": "",
    },
    top = "br_ecc_secded_fpv_monitor",
    deps = [":br_ecc_secded_fpv_monitor"],
)

DATA_WIDTHS = [
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12",
    "13",
    "16",
    "17",
    "19",
    "20",
    "21",
    "23",
    "25",
    "26",
    "27",
    "28",
    "29",
    "31",
    "35",
    "40",
    "42",
    "57",
    "58",
    "60",
    "64",
    "70",
    "85",
    "90",
    "95",
    "100",
    "105",
    "110",
    "115",
    "120",
    "121",
    "128",
    "145",
    "150",
    "165",
    "170",
    "185",
    "190",
    "215",
    "220",
    "235",
    "240",
    "247",
    "248",
    "250",
    "256",
    "270",
    "310",
    "360",
    "410",
    "450",
    "502",
    "503",
    "512",
    "650",
    "760",
    "800",
    "950",
    "1000",
    "1013",
    "1014",
    "1020",
    "1024",
]

br_verilog_fpv_test_tools_suite(
    name = "br_ecc_secded_test",
    params = {"DataWidth": DATA_WIDTHS},
    tools = {
        "jg": "br_ecc_secded_fpv.jg.tcl",
        "vcf": "",
    },
    top = "br_ecc_secded_fpv_monitor",
    deps = [":br_ecc_secded_fpv_monitor"],
)

#################################################################
# ecc error set up

verilog_library(
    name = "br_ecc_secded_error_fpv_monitor",
    srcs = ["br_ecc_secded_error_fpv_monitor.sv"],
    deps = [
        "//ecc/rtl:br_ecc_secded_decoder",
        "//ecc/rtl:br_ecc_secded_encoder",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_ecc_secded_error_fpv_monitor_elab_test",
    tool = "verific",
    deps = [":br_ecc_secded_error_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_ecc_secded_error_test_dw4",
    elab_opts = ["-parameter DataWidth 4"],
    params = {
        "DecRegisterInputs": [
            "1",
            "0",
        ],
        "DecRegisterOutputs": [
            "1",
            "0",
        ],
        "EncRegisterInputs": [
            "1",
            "0",
        ],
        "EncRegisterOutputs": [
            "1",
            "0",
        ],
        "RegisterSyndrome": [
            "1",
            "0",
        ],
    },
    tools = {
        "jg": "br_ecc_secded_error_fpv.jg.tcl",
        "vcf": "",
    },
    top = "br_ecc_secded_error_fpv_monitor",
    deps = [":br_ecc_secded_error_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_ecc_secded_error_test",
    params = {"DataWidth": DATA_WIDTHS},
    tools = {
        "jg": "br_ecc_secded_error_fpv.jg.tcl",
        "vcf": "",
    },
    top = "br_ecc_secded_error_fpv_monitor",
    deps = [":br_ecc_secded_error_fpv_monitor"],
)
