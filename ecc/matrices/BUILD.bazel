# Copyright 2024-2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

# RTL-supported message widths (k)
K = [
    "4",
    "8",
    "11",
    "16",
    "26",
    "32",
    "57",
    "64",
    "120",
    "128",
    "247",
    "256",
    "502",
    "512",
    "1013",
    "1024",
]

GOLDEN_HSIAO_G_K_FILES = ["hsiao_G_k" + k + ".txt" for k in K]

GOLDEN_HSIAO_H_K_FILES = ["hsiao_H_k" + k + ".txt" for k in K]

GENERATED_HSIAO_G_K_FILES = ["gen_hsiao_G_k" + k + ".txt" for k in K]

GENERATED_HSIAO_H_K_FILES = ["gen_hsiao_H_k" + k + ".txt" for k in K]

[
    [
        diff_test(
            name = "hsiao_G_k" + k + "_diff_test",
            failure_message = "Golden hsiao_G_k" + k + ".txt does not match the generated code. Please run `bazel run //ecc/matrices:update` to automatically update the golden.",
            file1 = "hsiao_G_k" + k + ".txt",
            file2 = ":gen_hsiao_G_k" + k + ".txt",
        ),
        diff_test(
            name = "hsiao_H_k" + k + "_diff_test",
            failure_message = "Golden hsiao_H_k" + k + ".txt does not match the generated code. Please run `bazel run //ecc/matrices:update` to automatically update the golden.",
            file1 = "hsiao_H_k" + k + ".txt",
            file2 = ":gen_hsiao_H_k" + k + ".txt",
        ),
        genrule(
            name = "gen_hsiao_k" + k,
            outs = [
                "gen_hsiao_G_k" + k + ".txt",
                "gen_hsiao_H_k" + k + ".txt",
            ],
            cmd = "$(location //python/eccgen) --k " + k + " --scheme hsiao_secded --generator-matrix-output=$(location gen_hsiao_G_k" + k + ".txt) --parity-check-matrix-output=$(location gen_hsiao_H_k" + k + ".txt)",
            tools = ["//python/eccgen"],
        ),
    ]
    for k in K
]

write_file(
    name = "gen_update.sh",
    out = "update.sh",
    content = [
                  "#!/usr/bin/env bash",
                  "cd $BUILD_WORKSPACE_DIRECTORY",
              ] + ["cp -fv bazel-bin/ecc/matrices/gen_hsiao_G_k" + k + ".txt ecc/matrices/hsiao_G_k" + k + ".txt" for k in K] +
              ["cp -fv bazel-bin/ecc/matrices/gen_hsiao_H_k" + k + ".txt ecc/matrices/hsiao_H_k" + k + ".txt" for k in K],
)

sh_binary(
    name = "update",
    srcs = [":update.sh"],
    data = GOLDEN_HSIAO_G_K_FILES + GENERATED_HSIAO_G_K_FILES + GOLDEN_HSIAO_H_K_FILES + GENERATED_HSIAO_H_K_FILES,
)
