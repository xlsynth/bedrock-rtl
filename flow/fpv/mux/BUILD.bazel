# Copyright 2024-2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:br_verilog.bzl", "br_verilog_fpv_test_suite")
load("//bazel:verilog.bzl", "verilog_elab_test")

package(default_visibility = ["//visibility:public"])

# Basic mux FV checker
verilog_library(
    name = "br_flow_mux_basic_fpv_monitor",
    srcs = ["br_flow_mux_basic_fpv_monitor.sv"],
)

# Bedrock-RTL Flow-Controlled Multiplexer (Fixed-Priority)(Unstable)

verilog_library(
    name = "br_flow_mux_fixed_fpv_monitor",
    srcs = ["br_flow_mux_fixed_fpv_monitor.sv"],
    deps = [
        ":br_flow_mux_basic_fpv_monitor",
        "//flow/rtl:br_flow_mux_fixed",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_flow_mux_fixed_fpv_monitor_elab_test",
    tool = "verific",
    deps = [":br_flow_mux_fixed_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_flow_mux_fixed_jg_test_suite",
    custom_tcl_body = "br_flow_mux_fpv.jg.tcl",
    illegal_param_combinations = {
        (
            "EnableCoverPushBackpressure",
            "EnableAssertPushValidStability",
            "EnableAssertPushDataStability",
        ): [
            ("0", "0", "1"),
            ("0", "1", "0"),
            ("0", "1", "1"),
            ("1", "0", "1"),
        ],
    },
    params = {
        "EnableAssertPushDataStability": [
            "0",
            "1",
        ],
        "EnableAssertPushValidStability": [
            "0",
            "1",
        ],
        "EnableCoverPushBackpressure": [
            "0",
            "1",
        ],
        "NumFlows": [
            "2",
            "4",
            "5",
        ],
        "Width": [
            "1",
            "3",
            "4",
        ],
    },
    tool = "jg",
    top = "br_flow_mux_fixed",
    deps = [":br_flow_mux_fixed_fpv_monitor"],
)

# Bedrock-RTL Flow-Controlled Multiplexer (Least-Recently-Used)(Unstable)

verilog_library(
    name = "br_flow_mux_lru_fpv_monitor",
    srcs = ["br_flow_mux_lru_fpv_monitor.sv"],
    deps = [
        ":br_flow_mux_basic_fpv_monitor",
        "//arb/fpv:lru_basic_fpv_monitor",
        "//flow/rtl:br_flow_mux_lru",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_flow_mux_lru_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_flow_mux_lru_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_flow_mux_lru_jg_test_suite",
    custom_tcl_body = "br_flow_mux_fpv.jg.tcl",
    illegal_param_combinations = {
        (
            "EnableCoverPushBackpressure",
            "EnableAssertPushValidStability",
            "EnableAssertPushDataStability",
        ): [
            ("0", "0", "1"),
            ("0", "1", "0"),
            ("0", "1", "1"),
            ("1", "0", "1"),
        ],
    },
    params = {
        "EnableAssertPushDataStability": [
            "0",
            "1",
        ],
        "EnableAssertPushValidStability": [
            "0",
            "1",
        ],
        "EnableCoverPushBackpressure": [
            "0",
            "1",
        ],
        "NumFlows": [
            "2",
            "4",
            "5",
        ],
        "Width": [
            "1",
            "3",
            "4",
        ],
    },
    tool = "jg",
    top = "br_flow_mux_lru",
    deps = [":br_flow_mux_lru_fpv_monitor"],
)

# Bedrock-RTL Flow-Controlled Multiplexer (Round-Robin)(Unstable)

verilog_library(
    name = "br_flow_mux_rr_fpv_monitor",
    srcs = ["br_flow_mux_rr_fpv_monitor.sv"],
    deps = [
        ":br_flow_mux_basic_fpv_monitor",
        "//arb/fpv:rr_basic_fpv_monitor",
        "//flow/rtl:br_flow_mux_rr",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_flow_mux_rr_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_flow_mux_rr_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_flow_mux_rr_jg_test_suite",
    custom_tcl_body = "br_flow_mux_fpv.jg.tcl",
    illegal_param_combinations = {
        (
            "EnableCoverPushBackpressure",
            "EnableAssertPushValidStability",
            "EnableAssertPushDataStability",
        ): [
            ("0", "0", "1"),
            ("0", "1", "0"),
            ("0", "1", "1"),
            ("1", "0", "1"),
        ],
    },
    params = {
        "EnableAssertPushDataStability": [
            "0",
            "1",
        ],
        "EnableAssertPushValidStability": [
            "0",
            "1",
        ],
        "EnableCoverPushBackpressure": [
            "0",
            "1",
        ],
        "NumFlows": [
            "2",
            "4",
            "5",
        ],
        "Width": [
            "1",
            "3",
            "4",
        ],
    },
    tool = "jg",
    top = "br_flow_mux_rr",
    deps = [":br_flow_mux_rr_fpv_monitor"],
)

# Bedrock-RTL Flow Mux with Select (Unstable)

verilog_library(
    name = "br_flow_mux_select_unstable_fpv_monitor",
    srcs = ["br_flow_mux_select_unstable_fpv_monitor.sv"],
    deps = [
        ":br_flow_mux_basic_fpv_monitor",
        "//flow/rtl:br_flow_mux_select_unstable",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_flow_mux_select_unstable_fpv_monitor_elab_test",
    tool = "verific",
    deps = [":br_flow_mux_select_unstable_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_flow_mux_select_unstable_jg_test_suite",
    custom_tcl_body = "br_flow_mux_select_unstable_fpv.jg.tcl",
    illegal_param_combinations = {
        (
            "EnableCoverPushBackpressure",
            "EnableAssertPushValidStability",
            "EnableAssertPushDataStability",
        ): [
            ("0", "0", "1"),
            ("0", "1", "0"),
            ("0", "1", "1"),
            ("1", "0", "1"),
        ],
    },
    params = {
        "EnableAssertPushDataStability": [
            "0",
            "1",
        ],
        "EnableAssertPushValidStability": [
            "0",
            "1",
        ],
        "EnableCoverPushBackpressure": [
            "0",
            "1",
        ],
        "NumFlows": [
            "2",
            "4",
            "5",
        ],
        "Width": [
            "1",
            "3",
            "4",
        ],
    },
    tool = "jg",
    top = "br_flow_mux_select_unstable",
    deps = [":br_flow_mux_select_unstable_fpv_monitor"],
)

# Bedrock-RTL Flow Mux with Select

verilog_library(
    name = "br_flow_mux_select_fpv_monitor",
    srcs = ["br_flow_mux_select_fpv_monitor.sv"],
    deps = [
        ":br_flow_mux_basic_fpv_monitor",
        "//flow/rtl:br_flow_mux_select",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_flow_mux_select_fpv_monitor_elab_test",
    tool = "verific",
    deps = [":br_flow_mux_select_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_flow_mux_select_jg_test_suite",
    custom_tcl_body = "br_flow_mux_select_fpv.jg.tcl",
    illegal_param_combinations = {
        (
            "EnableCoverPushBackpressure",
            "EnableAssertPushValidStability",
            "EnableAssertPushDataStability",
        ): [
            ("0", "0", "1"),
            ("0", "1", "0"),
            ("0", "1", "1"),
            ("1", "0", "1"),
        ],
    },
    params = {
        "EnableAssertPushDataStability": [
            "0",
            "1",
        ],
        "EnableAssertPushValidStability": [
            "0",
            "1",
        ],
        "EnableCoverPushBackpressure": [
            "0",
            "1",
        ],
        "NumFlows": [
            "2",
            "4",
            "5",
        ],
        "Width": [
            "1",
            "3",
            "4",
        ],
    },
    tool = "jg",
    top = "br_flow_mux_select",
    deps = [":br_flow_mux_select_fpv_monitor"],
)

# Bedrock-RTL Flow-Controlled Stable Multiplexer (Fixed-Priority)

verilog_library(
    name = "br_flow_mux_fixed_stable_fpv_monitor",
    srcs = ["br_flow_mux_fixed_stable_fpv_monitor.sv"],
    deps = [
        ":br_flow_mux_basic_fpv_monitor",
        "//flow/rtl:br_flow_mux_fixed_stable",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_flow_mux_fixed_stable_fpv_monitor_elab_test",
    tool = "verific",
    deps = [":br_flow_mux_fixed_stable_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_flow_mux_fixed_stable_jg_test_suite",
    custom_tcl_body = "br_flow_mux_stable_fpv.jg.tcl",
    illegal_param_combinations = {
        (
            "EnableCoverPushBackpressure",
            "EnableAssertPushValidStability",
            "EnableAssertPushDataStability",
        ): [
            ("0", "0", "1"),
            ("0", "1", "0"),
            ("0", "1", "1"),
            ("1", "0", "1"),
        ],
    },
    params = {
        "EnableAssertPushDataStability": [
            "0",
            "1",
        ],
        "EnableAssertPushValidStability": [
            "0",
            "1",
        ],
        "EnableCoverPushBackpressure": [
            "0",
            "1",
        ],
        "NumFlows": [
            "2",
            "4",
            "5",
        ],
        "RegisterPopReady": [
            "0",
            "1",
        ],
        "Width": [
            "1",
            "3",
            "4",
        ],
    },
    tool = "jg",
    top = "br_flow_mux_fixed_stable",
    deps = [":br_flow_mux_fixed_stable_fpv_monitor"],
)

# Bedrock-RTL Flow-Controlled Stable Multiplexer (Least-Recently-Used)

verilog_library(
    name = "br_flow_mux_lru_stable_fpv_monitor",
    srcs = ["br_flow_mux_lru_stable_fpv_monitor.sv"],
    deps = [
        ":br_flow_mux_basic_fpv_monitor",
        "//arb/fpv:lru_basic_fpv_monitor",
        "//flow/rtl:br_flow_mux_lru_stable",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_flow_mux_lru_stable_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_flow_mux_lru_stable_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_flow_mux_lru_stable_jg_test_suite",
    custom_tcl_body = "br_flow_mux_stable_fpv.jg.tcl",
    illegal_param_combinations = {
        (
            "EnableCoverPushBackpressure",
            "EnableAssertPushValidStability",
            "EnableAssertPushDataStability",
        ): [
            ("0", "0", "1"),
            ("0", "1", "0"),
            ("0", "1", "1"),
            ("1", "0", "1"),
        ],
    },
    params = {
        "EnableAssertPushDataStability": [
            "0",
            "1",
        ],
        "EnableAssertPushValidStability": [
            "0",
            "1",
        ],
        "EnableCoverPushBackpressure": [
            "0",
            "1",
        ],
        "NumFlows": [
            "2",
            "4",
            "5",
        ],
        "RegisterPopReady": [
            "0",
            "1",
        ],
        "Width": [
            "1",
            "3",
            "4",
        ],
    },
    tool = "jg",
    top = "br_flow_mux_lru_stable",
    deps = [":br_flow_mux_lru_stable_fpv_monitor"],
)

# Bedrock-RTL Flow-Controlled Stable Multiplexer (Round-Robin)

verilog_library(
    name = "br_flow_mux_rr_stable_fpv_monitor",
    srcs = ["br_flow_mux_rr_stable_fpv_monitor.sv"],
    deps = [
        ":br_flow_mux_basic_fpv_monitor",
        "//arb/fpv:rr_basic_fpv_monitor",
        "//flow/rtl:br_flow_mux_rr_stable",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_flow_mux_rr_stable_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_flow_mux_rr_stable_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_flow_mux_rr_stable_jg_test_suite",
    custom_tcl_body = "br_flow_mux_stable_fpv.jg.tcl",
    illegal_param_combinations = {
        (
            "EnableCoverPushBackpressure",
            "EnableAssertPushValidStability",
            "EnableAssertPushDataStability",
        ): [
            ("0", "0", "1"),
            ("0", "1", "0"),
            ("0", "1", "1"),
            ("1", "0", "1"),
        ],
    },
    params = {
        "EnableAssertPushDataStability": [
            "0",
            "1",
        ],
        "EnableAssertPushValidStability": [
            "0",
            "1",
        ],
        "EnableCoverPushBackpressure": [
            "0",
            "1",
        ],
        "NumFlows": [
            "2",
            "4",
            "5",
        ],
        "RegisterPopReady": [
            "0",
            "1",
        ],
        "Width": [
            "1",
            "3",
            "4",
        ],
    },
    tool = "jg",
    top = "br_flow_mux_rr_stable",
    deps = [":br_flow_mux_rr_stable_fpv_monitor"],
)
