# Copyright 2024 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:verilog.bzl", "verible_test", "verilog_elab_test")

package(default_visibility = ["//visibility:public"])

verilog_library(
    name = "br_flow_arb_fixed",
    srcs = ["br_flow_arb_fixed.sv"],
    deps = [
        "//arb/rtl:br_arb_fixed",
        "//macros:br_asserts_internal",
    ],
)

verilog_library(
    name = "br_flow_arb_rr",
    srcs = ["br_flow_arb_rr.sv"],
    deps = [
        "//arb/rtl:br_arb_rr",
        "//macros:br_registers",
        "//macros:br_asserts_internal",
    ],
)

verilog_library(
    name = "br_flow_arb_lru",
    srcs = ["br_flow_arb_lru.sv"],
    deps = [
        "//arb/rtl:br_arb_lru",
        "//macros:br_registers",
        "//macros:br_asserts_internal",
    ],
)

verilog_library(
    name = "br_flow_demux_select",
    srcs = ["br_flow_demux_select.sv"],
    deps = [
        ":br_flow_demux_select_unstable",
        ":br_flow_reg_rev",
        "//macros:br_asserts_internal",
    ],
)

verilog_library(
    name = "br_flow_demux_select_unstable",
    srcs = ["br_flow_demux_select_unstable.sv"],
    deps = ["//macros:br_asserts_internal"],
)

verilog_library(
    name = "br_flow_fork",
    srcs = ["br_flow_fork.sv"],
    deps = ["//macros:br_asserts_internal"],
)

verilog_library(
    name = "br_flow_join",
    srcs = ["br_flow_join.sv"],
    deps = ["//macros:br_asserts_internal"],
)

verilog_library(
    name = "br_flow_mux_select",
    srcs = ["br_flow_mux_select.sv"],
    deps = [
        ":br_flow_mux_select_unstable",
        ":br_flow_reg_fwd",
        "//macros:br_asserts_internal",
    ],
)

verilog_library(
    name = "br_flow_mux_select_unstable",
    srcs = ["br_flow_mux_select_unstable.sv"],
    deps = ["//macros:br_asserts_internal"],
)

verilog_library(
    name = "br_flow_reg_both",
    srcs = ["br_flow_reg_both.sv"],
    deps = [
        ":br_flow_reg_fwd",
        ":br_flow_reg_rev",
    ],
)

verilog_library(
    name = "br_flow_reg_fwd",
    srcs = ["br_flow_reg_fwd.sv"],
    deps = [
        "//macros:br_registers",
        "//macros:br_asserts_internal",
    ],
)

verilog_library(
    name = "br_flow_reg_rev",
    srcs = ["br_flow_reg_rev.sv"],
    deps = [
        "//macros:br_registers",
        "//macros:br_asserts_internal",
    ],
)

verilog_elab_test(
    name = "br_flow_arb_fixed_elab_test",
    deps = [":br_flow_arb_fixed"],
    top = "br_flow_arb_fixed",
)

verilog_elab_test(
    name = "br_flow_arb_rr_elab_test",
    deps = [":br_flow_arb_rr"],
    top = "br_flow_arb_rr",
)

verilog_elab_test(
    name = "br_flow_arb_lru_elab_test",
    deps = [":br_flow_arb_lru"],
    top = "br_flow_arb_lru",
)

verilog_elab_test(
    name = "br_flow_demux_select_elab_test",
    deps = [":br_flow_demux_select"],
    top = "br_flow_demux_select",
)

verilog_elab_test(
    name = "br_flow_demux_select_unstable_elab_test",
    deps = [":br_flow_demux_select_unstable"],
    top = "br_flow_demux_select_unstable",
)

verilog_elab_test(
    name = "br_flow_fork_elab_test",
    deps = [":br_flow_fork"],
    top = "br_flow_fork",
)

verilog_elab_test(
    name = "br_flow_join_elab_test",
    deps = [":br_flow_join"],
    top = "br_flow_join",
)

verilog_elab_test(
    name = "br_flow_mux_select_elab_test",
    deps = [":br_flow_mux_select"],
    top = "br_flow_mux_select",
)

verilog_elab_test(
    name = "br_flow_mux_select_unstable_elab_test",
    deps = [":br_flow_mux_select_unstable"],
    top = "br_flow_mux_select_unstable",
)

verilog_elab_test(
    name = "br_flow_reg_both_elab_test",
    deps = [":br_flow_reg_both"],
    top = "br_flow_reg_both",
)

verilog_elab_test(
    name = "br_flow_reg_fwd_elab_test",
    deps = [":br_flow_reg_fwd"],
    top = "br_flow_reg_fwd",
)

verilog_elab_test(
    name = "br_flow_reg_rev_elab_test",
    deps = [":br_flow_reg_rev"],
    top = "br_flow_reg_rev",
)

verible_test(
    name = "br_flow_arb_fixed_verible_test",
    srcs = ["br_flow_arb_fixed.sv"],
)

verible_test(
    name = "br_flow_arb_rr_verible_test",
    srcs = ["br_flow_arb_rr.sv"],
)

verible_test(
    name = "br_flow_arb_lru_verible_test",
    srcs = ["br_flow_arb_lru.sv"],
)

verible_test(
    name = "br_flow_demux_select_verible_test",
    srcs = ["br_flow_demux_select.sv"],
)

verible_test(
    name = "br_flow_demux_select_unstable_verible_test",
    srcs = ["br_flow_demux_select_unstable.sv"],
)

verible_test(
    name = "br_flow_fork_verible_test",
    srcs = ["br_flow_fork.sv"],
)

verible_test(
    name = "br_flow_join_verible_test",
    srcs = ["br_flow_join.sv"],
)

verible_test(
    name = "br_flow_mux_fixed_verible_test",
    srcs = ["br_flow_mux_fixed.sv"],
)

verible_test(
    name = "br_flow_mux_rr_verible_test",
    srcs = ["br_flow_mux_rr.sv"],
)

verible_test(
    name = "br_flow_mux_lru_verible_test",
    srcs = ["br_flow_mux_lru.sv"],
)

verible_test(
    name = "br_flow_mux_select_verible_test",
    srcs = ["br_flow_mux_select.sv"],
)

verible_test(
    name = "br_flow_mux_select_unstable_verible_test",
    srcs = ["br_flow_mux_select_unstable.sv"],
)

verible_test(
    name = "br_flow_reg_both_verible_test",
    srcs = ["br_flow_reg_both.sv"],
)

verible_test(
    name = "br_flow_reg_fwd_verible_test",
    srcs = ["br_flow_reg_fwd.sv"],
)

verible_test(
    name = "br_flow_reg_rev_verible_test",
    srcs = ["br_flow_reg_rev.sv"],
)
