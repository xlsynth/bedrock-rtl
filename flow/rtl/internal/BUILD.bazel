# Copyright 2024-2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:br_verilog.bzl", "br_verilog_elab_and_lint_test_suite")

package(default_visibility = ["//visibility:public"])

verilog_library(
    name = "br_flow_arb_core",
    srcs = ["br_flow_arb_core.sv"],
    deps = [
        ":br_flow_checks_valid_data_impl",
        ":br_flow_checks_valid_data_intg",
        "//macros:br_asserts_internal",
        "//macros:br_unused",
    ],
)

verilog_library(
    name = "br_flow_mux_core",
    srcs = ["br_flow_mux_core.sv"],
    deps = [
        ":br_flow_arb_core",
        ":br_flow_checks_valid_data_impl",
        ":br_flow_checks_valid_data_intg",
        "//macros:br_asserts_internal",
        "//macros:br_unused",
        "//mux/rtl:br_mux_onehot",
    ],
)

verilog_library(
    name = "br_flow_mux_core_stable",
    srcs = ["br_flow_mux_core_stable.sv"],
    deps = [
        ":br_flow_checks_valid_data_impl",
        ":br_flow_mux_core",
        "//flow/rtl:br_flow_reg_both",
    ],
)

verilog_library(
    name = "br_flow_checks_valid_data_intg",
    srcs = ["br_flow_checks_valid_data_intg.sv"],
    # Users should never instance this directly in their design because
    # it uses the Bedrock library-internal macros.
    visibility = ["//:__subpackages__"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_unused",
    ],
)

verilog_library(
    name = "br_flow_checks_valid_data_impl",
    srcs = ["br_flow_checks_valid_data_impl.sv"],
    # Users should never instance this directly in their design because
    # it uses the Bedrock library-internal macros.
    visibility = ["//:__subpackages__"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_unused",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_flow_arb_core_test_suite",
    params = {
        "NumFlows": [
            "2",
            "3",
        ],
    },
    deps = [":br_flow_arb_core"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_flow_mux_core_test_suite",
    params = {
        "NumFlows": [
            "2",
            "3",
        ],
        "Width": [
            "5",
            "8",
        ],
    },
    deps = [":br_flow_mux_core"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_flow_mux_core_stable_test_suite",
    params = {
        "NumFlows": [
            "2",
            "3",
        ],
        "Width": [
            "5",
            "8",
        ],
        "RegisterPopReady": [
            "0",
            "1",
        ],
    },
    deps = [":br_flow_mux_core_stable"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_flow_checks_valid_data_intg_test_suite_valid_stable",
    disable_lint_rules = ["NO_OUTPUT"],
    params = {
        "NumFlows": [
            "1",
            "2",
        ],
        "EnableCoverBackpressure": [
            "1",
        ],
        "EnableAssertValidStability": [
            "1",
        ],
        "EnableAssertDataStability": [
            "0",
            "1",
        ],
    },
    deps = [":br_flow_checks_valid_data_intg"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_flow_checks_valid_data_intg_test_suite_valid_unstable",
    disable_lint_rules = ["NO_OUTPUT"],
    params = {
        "NumFlows": [
            "1",
            "2",
        ],
        "EnableCoverBackpressure": [
            "1",
        ],
        "EnableAssertValidStability": [
            "0",
        ],
    },
    deps = [":br_flow_checks_valid_data_intg"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_flow_checks_valid_data_intg_test_suite_no_backpressure",
    disable_lint_rules = ["NO_OUTPUT"],
    params = {
        "NumFlows": [
            "1",
            "2",
        ],
        "EnableCoverBackpressure": [
            "0",
        ],
    },
    deps = [":br_flow_checks_valid_data_intg"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_flow_checks_valid_data_impl_test_suite_valid_stable",
    disable_lint_rules = ["NO_OUTPUT"],
    params = {
        "NumFlows": [
            "1",
            "2",
        ],
        "EnableCoverBackpressure": [
            "1",
        ],
        "EnableAssertValidStability": [
            "1",
        ],
        "EnableAssertDataStability": [
            "0",
            "1",
        ],
    },
    deps = [":br_flow_checks_valid_data_impl"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_flow_checks_valid_data_impl_test_suite_valid_unstable",
    disable_lint_rules = ["NO_OUTPUT"],
    params = {
        "NumFlows": [
            "1",
            "2",
        ],
        "EnableCoverBackpressure": [
            "1",
        ],
        "EnableAssertValidStability": [
            "0",
        ],
    },
    deps = [":br_flow_checks_valid_data_impl"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_flow_checks_valid_data_impl_test_suite_no_backpressure",
    disable_lint_rules = ["NO_OUTPUT"],
    params = {
        "NumFlows": [
            "1",
            "2",
        ],
        "EnableCoverBackpressure": [
            "0",
        ],
    },
    deps = [":br_flow_checks_valid_data_impl"],
)

verilog_library(
    name = "br_flow_xbar_core",
    srcs = ["br_flow_xbar_core.sv"],
    deps = [
        ":br_flow_mux_core",
        "//flow/rtl:br_flow_demux_select_unstable",
        "//flow/rtl:br_flow_reg_fwd",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_flow_xbar_core_test_suite",
    params = {
        "NumPushFlows": [
            "2",
            "4",
        ],
        "NumPopFlows": [
            "2",
            "4",
        ],
        "Width": [
            "5",
            "8",
        ],
        "RegisterDemuxOutputs": [
            "0",
            "1",
        ],
        "RegisterPopOutputs": [
            "0",
            "1",
        ],
    },
    deps = [":br_flow_xbar_core"],
)
