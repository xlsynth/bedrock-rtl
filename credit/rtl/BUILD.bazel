# Copyright 2024-2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:br_verilog.bzl", "br_verilog_elab_and_lint_test_suite")

package(default_visibility = ["//visibility:public"])

verilog_library(
    name = "br_credit_counter",
    srcs = ["br_credit_counter.sv"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_registers",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_credit_counter_test_suite_basic",
    params = {
        "MaxValue": [
            "1",
            "2",
        ],
        "MaxChange": [
            "1",
        ],
    },
    deps = [":br_credit_counter"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_credit_counter_test_suite_pow_of_2_minus_1",
    params = {
        "MaxValue": [
            "3",
        ],
        "MaxChange": [
            "1",
            "2",
            "3",
        ],
    },
    deps = [":br_credit_counter"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_credit_counter_test_suite_pow_of_2",
    params = {
        "MaxValue": [
            "4",
        ],
        "MaxChange": [
            "1",
            "2",
            "3",
            "4",
        ],
    },
    deps = [":br_credit_counter"],
)

verilog_library(
    name = "br_credit_sender",
    srcs = ["br_credit_sender.sv"],
    deps = [
        ":br_credit_counter",
        "//flow/rtl/internal:br_flow_checks_valid_data_intg",
        "//macros:br_asserts_internal",
        "//macros:br_registers",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_credit_sender_test_suite",
    params = {
        "MaxCredit": [
            "1",
            "3",
            "8",
        ],
        "Width": [
            "1",
            "16",
        ],
        "RegisterPopOutputs": [
            "0",
            "1",
        ],
    },
    deps = [":br_credit_sender"],
)

verilog_library(
    name = "br_credit_receiver",
    srcs = ["br_credit_receiver.sv"],
    deps = [
        ":br_credit_counter",
        "//macros:br_asserts_internal",
        "//pkg:br_math_pkg",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_credit_receiver_test_suite_basic",
    params = {
        "MaxCredit": [
            "3",
            "8",
        ],
        "Width": [
            "1",
            "16",
        ],
        "RegisterPushOutputs": [
            "0",
            "1",
        ],
        "PopCreditMaxChange": [
            "1",
            "3",
        ],
    },
    deps = [":br_credit_receiver"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_credit_receiver_test_suite_push_credit_change",
    params = {
        "MaxCredit": ["5"],
        "PopCreditMaxChange": ["3"],
        "RegisterPushOutputs": [
            "0",
            "1",
        ],
        "PushCreditMaxChange": [
            "1",
            "2",
            "3",
        ],
    },
    deps = [":br_credit_receiver"],
)
