# Copyright 2024-2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:br_verilog.bzl", "br_verilog_elab_and_lint_test_suite")

package(default_visibility = ["//visibility:public"])

verilog_library(
    name = "br_amba_axi2axil_core",
    srcs = ["br_amba_axi2axil_core.sv"],
    deps = [
        "//amba/rtl:br_amba_pkg",
        "//counter/rtl:br_counter_incr",
        "//fifo/rtl:br_fifo_flops",
        "//flow/rtl:br_flow_reg_both",
        "//macros:br_asserts_internal",
        "//macros:br_registers",
        "//macros:br_unused",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_amba_axi2axil_core_test_suite",
    params = {
        "AddrWidth": [
            "40",
        ],
        "DataWidth": [
            "64",
        ],
    },
    deps = [":br_amba_axi2axil_core"],
)

verilog_library(
    name = "br_amba_iso_wdata_align",
    srcs = ["br_amba_iso_wdata_align.sv"],
    deps = [
        "//amba/rtl:br_amba_pkg",
        "//counter/rtl:br_counter",
        "//counter/rtl:br_counter_incr",
        "//fifo/rtl:br_fifo_flops",
        "//macros:br_asserts_internal",
        "//macros:br_unused",
        "//pkg:br_math_pkg",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_amba_iso_wdata_align_test_suite",
    params = {
        "MaxTransactionSkew": [
            "2",
            "3",
        ],
        "MaxAxiBurstLen": [
            "1",
            "256",
        ],
    },
    deps = [":br_amba_iso_wdata_align"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_amba_iso_wdata_align_iso_upstream_test_suite",
    params = {
        "FakeWriteDataOnAlign": [
            "1",
        ],
        "PreventExcessData": [
            "1",
        ],
        "MaxAxiBurstLen": [
            "1",
            "256",
        ],
    },
    deps = [":br_amba_iso_wdata_align"],
)

verilog_library(
    name = "br_amba_iso_resp_tracker",
    srcs = ["br_amba_iso_resp_tracker.sv"],
    deps = [
        "//amba/rtl:br_amba_pkg",
        "//arb/rtl:br_arb_rr",
        "//counter/rtl:br_counter",
        "//counter/rtl:br_counter_incr",
        "//fifo/rtl:br_fifo_flops",
        "//fifo/rtl:br_fifo_shared_dynamic_flops",
        "//flow/rtl:br_flow_fork",
        "//flow/rtl:br_flow_join",
        "//flow/rtl:br_flow_mux_select_unstable",
        "//macros:br_asserts_internal",
        "//macros:br_registers",
        "//macros:br_unused",
        "//pkg:br_math_pkg",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_amba_iso_resp_tracker_test_suite",
    params = {
        "MaxAxiBurstLen": [
            "1",
            "256",
        ],
        "AxiIdCount": [
            "1",
            "2",
            "128",
        ],
    },
    deps = [":br_amba_iso_resp_tracker"],
)

verilog_library(
    name = "br_amba_iso_ds_fsm",
    srcs = ["br_amba_iso_ds_fsm.sv"],
    deps = [
        "//macros:br_asserts",
        "//macros:br_registers",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_amba_iso_ds_fsm_test_suite",
    deps = [":br_amba_iso_ds_fsm"],
)

verilog_library(
    name = "br_amba_iso_req_tracker",
    srcs = ["br_amba_iso_req_tracker.sv"],
    deps = [
        "//amba/rtl:br_amba_pkg",
        "//counter/rtl:br_counter",
        "//macros:br_asserts_internal",
        "//macros:br_registers",
        "//macros:br_unused",
        "//pkg:br_math_pkg",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_amba_iso_req_tracker_test_suite",
    params = {
        "MaxOutstanding": [
            "2",
            "128",
        ],
    },
    deps = [":br_amba_iso_req_tracker"],
)

verilog_library(
    name = "br_amba_iso_us_fsm",
    srcs = ["br_amba_iso_us_fsm.sv"],
    deps = [
        "//macros:br_registers",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_amba_iso_us_fsm_test_suite",
    deps = [":br_amba_iso_us_fsm"],
)
