# Copyright 2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:br_verilog.bzl", "br_verilog_fpv_test_tools_suite")
load("//bazel:verilog.bzl", "verilog_elab_test")

package(default_visibility = ["//visibility:public"])

# protocl check of Isolator

verilog_library(
    name = "isolate_axi_protocol_fv_check",
    srcs = ["isolate_axi_protocol_fv_check.sv"],
    deps = [
        "//amba/rtl:br_amba_axi_isolate_mgr",
        "//amba/rtl:br_amba_axi_isolate_sub",
        "//fpv/lib:fv_4phase_handshake",
    ],
)

# AXI4-Lite Default Target

verilog_library(
    name = "br_amba_axil_default_target_fpv_monitor",
    srcs = ["br_amba_axil_default_target_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_axil_default_target",
    ],
)

verilog_elab_test(
    name = "br_amba_axil_default_target_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_axil_default_target_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axil_default_target_test_suite",
    tools = {
        "jg": "br_amba_axil_default_target_fpv.jg.tcl",
    },
    top = "br_amba_axil_default_target",
    deps = [":br_amba_axil_default_target_fpv_monitor"],
)

# AXI4-Lite Default Target

verilog_library(
    name = "br_amba_axi_default_target_fpv_monitor",
    srcs = ["br_amba_axi_default_target_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_axi_default_target",
    ],
)

verilog_elab_test(
    name = "br_amba_axi_default_target_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_axi_default_target_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axi_default_target_test_suite",
    params = {
        "AxiIdWidth": [
            "1",
            "3",
        ],
        "SingleBeat": [
            "0",
            "1",
        ],
    },
    tools = {
        "jg": "br_amba_axi_default_target_fpv.jg.tcl",
    },
    top = "br_amba_axi_default_target",
    deps = [":br_amba_axi_default_target_fpv_monitor"],
)

# Bedrock-RTL AXI4 to AXI4-Lite Bridge

verilog_library(
    name = "br_amba_axi2axil_fpv_monitor",
    srcs = ["br_amba_axi2axil_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_axi2axil",
    ],
)

verilog_elab_test(
    name = "br_amba_axi2axil_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_axi2axil_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axi2axil_test_suite",
    elab_opts = [
        "-parameter MaxOutstandingReqs 4",
    ],
    tools = {
        "jg": "br_amba_axi2axil_fpv.jg.tcl",
    },
    top = "br_amba_axi2axil",
    deps = [":br_amba_axi2axil_fpv_monitor"],
)

# Bedrock-RTL AXI4-Lite 1:2 Split

verilog_library(
    name = "br_amba_axil_split_fpv_monitor",
    srcs = ["br_amba_axil_split_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_axil_split",
    ],
)

verilog_elab_test(
    name = "br_amba_axil_split_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_axil_split_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axil_split_test_suite",
    params = {
        "NumBranchAddrRanges": [
            "1",
            "2",
            "3",
        ],
    },
    tools = {
        "jg": "br_amba_axil_split_fpv.jg.tcl",
    },
    top = "br_amba_axil_split",
    deps = [":br_amba_axil_split_fpv_monitor"],
)

# AXI4 Timing Slice

verilog_library(
    name = "br_amba_axi_timing_slice_fpv_monitor",
    srcs = ["br_amba_axi_timing_slice_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_axi_timing_slice",
    ],
)

verilog_elab_test(
    name = "br_amba_axi_timing_slice_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_axi_timing_slice_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axi_timing_slice_test_suite",
    tools = {
        "jg": "br_amba_axi_timing_slice_fpv.jg.tcl",
    },
    top = "br_amba_axi_timing_slice",
    deps = [":br_amba_axi_timing_slice_fpv_monitor"],
)

# AXI4-Lite Timing Slice

verilog_library(
    name = "br_amba_axil_timing_slice_fpv_monitor",
    srcs = ["br_amba_axil_timing_slice_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_axil_timing_slice",
    ],
)

verilog_elab_test(
    name = "br_amba_axil_timing_slice_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_axil_timing_slice_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axil_timing_slice_test_suite",
    tools = {
        "jg": "br_amba_axil_timing_slice_fpv.jg.tcl",
    },
    top = "br_amba_axil_timing_slice",
    deps = [":br_amba_axil_timing_slice_fpv_monitor"],
)

# Bedrock-RTL AXI4-Lite to APB Bridge

verilog_library(
    name = "br_amba_axil2apb_fpv_monitor",
    srcs = ["br_amba_axil2apb_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_axil2apb",
    ],
)

verilog_elab_test(
    name = "br_amba_axil2apb_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_axil2apb_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axil2apb_test_suite",
    gui = True,
    tools = {
        "jg": "br_amba_axil2apb_fpv.jg.tcl",
    },
    top = "br_amba_axil2apb",
    deps = [":br_amba_axil2apb_fpv_monitor"],
)

# Bedrock-RTL APB Timing Slice

verilog_library(
    name = "br_amba_apb_timing_slice_fpv_monitor",
    srcs = ["br_amba_apb_timing_slice_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_apb_timing_slice",
    ],
)

verilog_elab_test(
    name = "br_amba_apb_timing_slice_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_apb_timing_slice_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_apb_timing_slice_test_suite",
    tools = {
        "jg": "",
    },
    top = "br_amba_apb_timing_slice",
    deps = [":br_amba_apb_timing_slice_fpv_monitor"],
)

# Bedrock-RTL ATB Funnel

verilog_library(
    name = "br_amba_atb_funnel_fpv_monitor",
    srcs = ["br_amba_atb_funnel_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_atb_funnel",
    ],
)

verilog_elab_test(
    name = "br_amba_atb_funnel_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_atb_funnel_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_atb_funnel_test_suite",
    tools = {
        "jg": "br_amba_atb_funnel_fpv.jg.tcl",
    },
    top = "br_amba_atb_funnel",
    deps = [":br_amba_atb_funnel_fpv_monitor"],
)

# Bedrock-RTL AXI4-Lite MSI Generator

verilog_library(
    name = "br_amba_axil_msi_fpv_monitor",
    srcs = ["br_amba_axil_msi_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_axil_msi",
    ],
)

verilog_elab_test(
    name = "br_amba_axil_msi_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_axil_msi_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axil_msi_test_suite",
    gui = True,
    tools = {
        "jg": "br_amba_axil_msi_fpv.jg.tcl",
    },
    top = "br_amba_axil_msi",
    deps = [":br_amba_axil_msi_fpv_monitor"],
)

# Bedrock-RTL AXI Upstream (Manager) Isolator

verilog_library(
    name = "br_amba_axi_isolate_mgr_fpv_monitor",
    srcs = ["br_amba_axi_isolate_mgr_fpv_monitor.sv"],
    deps = [
        ":isolate_axi_protocol_fv_check",
        "//amba/rtl:br_amba_axi_isolate_mgr",
    ],
)

verilog_elab_test(
    name = "br_amba_axi_isolate_mgr_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_axi_isolate_mgr_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axi_isolate_mgr_test_suite",
    elab_opts = [
        "-parameter MaxOutstanding 4",
    ],
    params = {
        "MaxAxiBurstLen": [
            "1",
            "256",
        ],
    },
    tools = {
        "jg": "br_amba_axi_isolate_mgr_fpv.jg.tcl",
    },
    top = "br_amba_axi_isolate_mgr",
    deps = [":br_amba_axi_isolate_mgr_fpv_monitor"],
)

# Bedrock-RTL AXI Downstream (Subordinate) Isolator

verilog_library(
    name = "br_amba_axi_isolate_sub_fpv_monitor",
    srcs = ["br_amba_axi_isolate_sub_fpv_monitor.sv"],
    deps = [
        ":isolate_axi_protocol_fv_check",
        "//amba/rtl:br_amba_axi_isolate_sub",
    ],
)

verilog_elab_test(
    name = "br_amba_axi_isolate_sub_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    tool = "verific",
    deps = [":br_amba_axi_isolate_sub_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axi_isolate_sub_test_suite",
    elab_opts = [
        "-parameter MaxOutstanding 4",
        "-parameter AxiIdCount 2",
        "-parameter StaticPerIdReadTrackerFifoDepth 2",
    ],
    params = {
        "MaxAxiBurstLen": [
            "1",
            "256",
        ],
        "IdWidth": [
            "1",
            "2",
        ],
        "UseDynamicFifoForReadTracker": [
            "0",
            "1",
        ],
    },
    tools = {
        "jg": "br_amba_axi_isolate_sub_fpv.jg.tcl",
    },
    top = "br_amba_axi_isolate_sub",
    deps = [":br_amba_axi_isolate_sub_fpv_monitor"],
)

# Bedrock-RTL AXI Demux

verilog_library(
    name = "br_amba_axi_demux_fpv_monitor",
    srcs = ["br_amba_axi_demux_fpv_monitor.sv"],
    deps = [
        "//amba/rtl:br_amba_axi_demux",
        "//fpv/lib:fv_fifo",
    ],
)

verilog_elab_test(
    name = "br_amba_axi_demux_fpv_monitor_elab_test",
    custom_tcl_header = "//:elab_test_jg_custom_header.verific.tcl",
    #TODO: elab complains about: use of undefined macro 'JS3_OUT_OF_ORDER'
    # needs to disable those spurious warnings for regression
    tags = ["manual"],
    tool = "verific",
    deps = [":br_amba_axi_demux_fpv_monitor"],
)

br_verilog_fpv_test_tools_suite(
    name = "br_amba_axi_demux_test_suite",
    elab_opts = [
        "-parameter AwAxiIdWidth 2",
        "-parameter ArAxiIdWidth 2",
    ],
    params = {
        "NumSubordinates": [
            "2",
            "3",
        ],
        "SingleIdOnly": [
            "0",
            "1",
        ],
    },
    tools = {
        "jg": "br_amba_axi_demux_fpv.jg.tcl",
    },
    top = "br_amba_axi_demux",
    deps = [":br_amba_axi_demux_fpv_monitor"],
)
