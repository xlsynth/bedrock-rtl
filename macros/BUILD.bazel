# Copyright 2024-2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:verilog.bzl", "verilog_elab_test", "verilog_lint_test")

package(default_visibility = ["//visibility:private"])

verilog_library(
    name = "br_asserts",
    hdrs = ["br_asserts.svh"],
    visibility = ["//visibility:public"],
)

verilog_library(
    name = "br_asserts_internal",
    hdrs = ["br_asserts_internal.svh"],
    visibility = ["//visibility:public"],
    deps = [":br_asserts"],
)

verilog_library(
    name = "br_fv",
    hdrs = ["br_fv.svh"],
    visibility = ["//visibility:public"],
    deps = [":br_asserts"],
)

verilog_library(
    name = "br_registers",
    hdrs = ["br_registers.svh"],
    visibility = ["//visibility:public"],
)

verilog_library(
    name = "br_gates",
    hdrs = ["br_gates.svh"],
    visibility = ["//visibility:public"],
)

verilog_library(
    name = "br_unused",
    hdrs = ["br_unused.svh"],
    visibility = ["//visibility:public"],
    deps = ["//misc/rtl:br_misc_unused"],
)

verilog_library(
    name = "br_unused_tb",
    srcs = ["br_unused_tb.sv"],
    deps = [":br_unused"],
)

verilog_elab_test(
    name = "br_unused_tb_elab_test",
    tool = "verific",
    deps = [":br_unused_tb"],
)

verilog_lint_test(
    name = "br_unused_tb_lint_test",
    tool = "ascentlint",
    visibility = ["//visibility:public"],
    deps = [":br_unused_tb"],
)

verilog_library(
    name = "br_tieoff",
    hdrs = ["br_tieoff.svh"],
    visibility = ["//visibility:public"],
    deps = [
        "//misc/rtl:br_misc_tieoff_one",
        "//misc/rtl:br_misc_tieoff_zero",
    ],
)

verilog_library(
    name = "br_tieoff_tb",
    srcs = ["br_tieoff_tb.sv"],
    deps = [":br_tieoff"],
)

verilog_elab_test(
    name = "br_tieoff_tb_elab_test",
    tool = "verific",
    deps = [":br_tieoff_tb"],
)

verilog_lint_test(
    name = "br_tieoff_tb_lint_test",
    tool = "ascentlint",
    deps = [":br_tieoff_tb"],
)

# Macro unit tests
# TODO(mgottscho): verilog_test simulation!
verilog_library(
    name = "br_asserts_test",
    srcs = ["br_asserts_test.sv"],
    deps = [":br_asserts"],
)

verilog_elab_test(
    name = "br_asserts_elab_test",
    defines = [
        "BR_ASSERT_ON",
        "BR_ENABLE_FPV",
    ],
    tool = "verific",
    deps = [":br_asserts_test"],
)

verilog_elab_test(
    name = "br_asserts_elab_noassert_test",
    tool = "verific",
    deps = [":br_asserts_test"],
)

# TODO(mgottscho): verilog_test simulation!
verilog_library(
    name = "br_asserts_internal_test",
    srcs = ["br_asserts_internal_test.sv"],
    deps = [":br_asserts_internal"],
)

verilog_elab_test(
    name = "br_asserts_elab_internal_test",
    defines = [
        "BR_ASSERT_ON",
        "BR_ENABLE_FPV",
        "BR_ENABLE_IMPL_CHECKS",
    ],
    tool = "verific",
    deps = [":br_asserts_internal_test"],
)

verilog_elab_test(
    name = "br_asserts_elab_internal_no_impl_test",
    defines = ["BR_ASSERT_ON"],
    tool = "verific",
    deps = [":br_asserts_internal_test"],
)

verilog_elab_test(
    name = "br_asserts_elab_internal_no_intg_test",
    defines = [
        "BR_ASSERT_ON",
        "BR_DISABLE_INTG_CHECKS",
    ],
    tool = "verific",
    deps = [":br_asserts_internal_test"],
)

verilog_elab_test(
    name = "br_asserts_internal_elab_noassert_test",
    tool = "verific",
    deps = [":br_asserts_internal_test"],
)

verilog_library(
    name = "br_gates_test",
    srcs = ["br_gates_test.sv"],
    deps = [
        ":br_asserts",
        ":br_gates",
        "//gate/rtl:br_gate_mock",
    ],
)

verilog_elab_test(
    name = "br_gates_elab_test",
    defines = ["BR_ASSERT_ON"],
    tool = "verific",
    deps = [":br_gates_test"],
)

verilog_library(
    name = "br_assign",
    hdrs = ["br_assign.svh"],
    visibility = ["//visibility:public"],
)

verilog_library(
    name = "br_assign_test",
    srcs = ["br_assign_test.sv"],
    deps = [":br_assign"],
)

verilog_elab_test(
    name = "br_assign_elab_test",
    tool = "verific",
    deps = [":br_assign_test"],
)

verilog_lint_test(
    name = "br_assign_lint_test",
    tool = "ascentlint",
    visibility = ["//visibility:public"],
    deps = [":br_assign_test"],
)
