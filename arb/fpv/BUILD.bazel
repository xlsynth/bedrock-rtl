# Copyright 2024 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:br_verilog.bzl", "br_verilog_fpv_test_suite")
load("//bazel:verilog.bzl", "rule_verilog_sandbox", "verilog_elab_test")

package(default_visibility = ["//visibility:public"])

# Fixed priority arbiter

verilog_library(
    name = "br_arb_fixed_fpv_monitor",
    srcs = ["br_arb_fixed_fpv_monitor.sv"],
    deps = [
        "//arb/rtl:br_arb_fixed",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_arb_fixed_fpv_monitor_elab_test",
    deps = [":br_arb_fixed_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_arb_fixed_jg_test_suite",
    params = {
        "NumRequesters": [
            "2",
            "5",
            "6",
        ],
    },
    tool = "jg",
    top = "br_arb_fixed",
    deps = [":br_arb_fixed_fpv_monitor"],
)

# Round robin arbiter

verilog_library(
    name = "br_arb_rr_fpv_monitor",
    srcs = ["br_arb_rr_fpv_monitor.sv"],
    deps = [
        "//arb/rtl:br_arb_rr",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_arb_rr_fpv_monitor_elab_test",
    deps = [":br_arb_rr_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_arb_rr_jg_test_suite",
    custom_tcl_body = "br_arb_rr_fpv.tcl",
    params = {
        "NumRequesters": [
            "2",
            "5",
            "6",
        ],
    },
    tool = "jg",
    top = "br_arb_rr",
    deps = [":br_arb_rr_fpv_monitor"],
)

# LRU arbiter

verilog_library(
    name = "br_arb_lru_fpv_monitor",
    srcs = ["br_arb_lru_fpv_monitor.sv"],
    deps = [
        "//arb/rtl:br_arb_lru",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_arb_lru_fpv_monitor_elab_test",
    deps = [":br_arb_lru_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_arb_lru_jg_test_suite",
    params = {
        "NumRequesters": [
            "2",
            "5",
            "6",
        ],
    },
    tool = "jg",
    top = "br_arb_lru",
    deps = [":br_arb_lru_fpv_monitor"],
)

rule_verilog_sandbox(
    name = "br_arb_lru_jg_sandbox",
    defines = [
        "BR_ASSERT_ON",
        "BR_ENABLE_IMPL_CHECKS",
    ],
    kind = "fpv",
    params = {
        "NumRequesters": "2",
    },
    tool = "jg",
    top = "br_arb_lru",
    deps = [":br_arb_lru_fpv_monitor"],
)

# Prioritized round-robin arbiter

verilog_library(
    name = "br_arb_pri_rr_fpv_monitor",
    srcs = ["br_arb_pri_rr_fpv_monitor.sv"],
    deps = [
        "//arb/rtl:br_arb_pri_rr",
        "//arb/rtl:br_arb_rr",
        "//macros:br_fv",
    ],
)

verilog_elab_test(
    name = "br_arb_pri_rr_fpv_monitor_elab_test",
    deps = [":br_arb_pri_rr_fpv_monitor"],
)

br_verilog_fpv_test_suite(
    name = "br_arb_pri_rr_jg_test_suite",
    custom_tcl_body = "br_arb_rr_fpv.tcl",
    gui = True,
    params = {
        "NumRequesters": [
            "2",
        ],
        "NumPriorities": [
            "2",
        ],
    },
    tool = "jg",
    top = "br_arb_pri_rr",
    deps = [":br_arb_pri_rr_fpv_monitor"],
)
