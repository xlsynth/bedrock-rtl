# Copyright 2024-2025 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:br_verilog.bzl", "br_verilog_elab_and_lint_test_suite")
load("//bazel:verilog.bzl", "verilog_elab_test", "verilog_lint_test")

package(default_visibility = ["//visibility:public"])

verilog_library(
    name = "br_counter_incr",
    srcs = ["br_counter_incr.sv"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_registers",
        "//macros:br_unused",
    ],
)

verilog_library(
    name = "br_counter_decr",
    srcs = ["br_counter_decr.sv"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_registers",
        "//macros:br_unused",
    ],
)

verilog_library(
    name = "br_counter",
    srcs = ["br_counter.sv"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_registers",
        "//macros:br_unused",
    ],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_counter_incr_test_suite0",
    params = {
        "MaxValue": [
            "1",
            "2",
            "3",
        ],
        "MaxIncrement": [
            "1",
        ],
    },
    deps = [":br_counter_incr"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_counter_incr_test_suite1",
    params = {
        "MaxValue": [
            "2",
            "3",
        ],
        "MaxIncrement": [
            "2",
        ],
        "EnableReinitAndIncr": [
            "0",
            "1",
        ],
    },
    deps = [":br_counter_incr"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_counter_incr_test_suite2",
    params = {
        "MaxValue": [
            "2",
            "3",
        ],
        "MaxIncrement": [
            "1",
            "2",
        ],
        "EnableSaturate": [
            "1",
        ],
    },
    deps = [":br_counter_incr"],
)

# Need to use the base verilog_elab_test/verilog_lint_test rules here
# since topstitch doesn't support >32-bit parameter overrides.
# TODO(zhemao): Switch back to topstitch-based sweeps once the issue is fixed.
verilog_elab_test(
    name = "br_counter_incr_64bit_elab_test",
    params = {
        "MaxValueWidth": "64",
        "MaxIncrementWidth": "64",
        "MaxValue": "64'd18446744073709551615",
        "MaxIncrement": "64'd18446744073709551615",
    },
    tool = "verific",
    deps = [":br_counter_incr"],
)

verilog_lint_test(
    name = "br_counter_incr_64bit_lint_test",
    params = {
        "MaxValueWidth": "64",
        "MaxIncrementWidth": "64",
        "MaxValue": "64'd18446744073709551615",
        "MaxIncrement": "64'd18446744073709551615",
    },
    tool = "ascentlint",
    deps = [":br_counter_incr"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_counter_decr_test_suite0",
    params = {
        "MaxValue": [
            "1",
            "2",
            "3",
        ],
        "MaxDecrement": [
            "1",
        ],
        "EnableReinitAndDecr": [
            "0",
            "1",
        ],
    },
    deps = [":br_counter_decr"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_counter_decr_test_suite1",
    params = {
        "MaxValue": [
            "2",
            "3",
        ],
        "MaxDecrement": [
            "2",
        ],
    },
    deps = [":br_counter_decr"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_counter_decr_test_suite2",
    params = {
        "MaxValue": [
            "2",
            "3",
        ],
        "MaxDecrement": [
            "1",
            "2",
        ],
        "EnableSaturate": [
            "1",
        ],
    },
    deps = [":br_counter_decr"],
)

# Need to use the base verilog_elab_test/verilog_lint_test rules here
# since topstitch doesn't support >32-bit parameter overrides.
# TODO(zhemao): Switch back to topstitch-based sweeps once the issue is fixed.
verilog_elab_test(
    name = "br_counter_decr_64bit_elab_test",
    params = {
        "MaxValueWidth": "64",
        "MaxDecrementWidth": "64",
        "MaxValue": "64'd18446744073709551615",
        "MaxDecrement": "64'd18446744073709551615",
    },
    tool = "verific",
    deps = [":br_counter_decr"],
)

verilog_lint_test(
    name = "br_counter_decr_64bit_lint_test",
    params = {
        "MaxValueWidth": "64",
        "MaxDecrementWidth": "64",
        "MaxValue": "64'd18446744073709551615",
        "MaxDecrement": "64'd18446744073709551615",
    },
    tool = "ascentlint",
    deps = [":br_counter_decr"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_counter_test_suite0",
    params = {
        "MaxValue": [
            "1",
            "2",
            "3",
        ],
        "MaxChange": [
            "1",
        ],
        "EnableReinitAndChange": [
            "0",
            "1",
        ],
    },
    deps = [":br_counter"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_counter_test_suite1",
    params = {
        "MaxValue": [
            "2",
            "3",
        ],
        "MaxChange": [
            "2",
        ],
        "EnableWrap": [
            "0",
            "1",
        ],
    },
    deps = [":br_counter"],
)

br_verilog_elab_and_lint_test_suite(
    name = "br_counter_test_suite2",
    params = {
        "MaxValue": [
            "2",
            "3",
        ],
        "MaxChange": [
            "2",
        ],
        "EnableWrap": [
            "0",
        ],
        "EnableSaturate": [
            "1",
        ],
    },
    deps = [":br_counter"],
)

# Need to use the base verilog_elab_test/verilog_lint_test rules here
# since topstitch doesn't support >32-bit parameter overrides.
# TODO(zhemao): Switch back to topstitch-based sweeps once the issue is fixed.
verilog_elab_test(
    name = "br_counter_64bit_elab_test",
    params = {
        "MaxValueWidth": "64",
        "MaxChangeWidth": "64",
        "MaxValue": "64'd18446744073709551615",
        "MaxChange": "64'd18446744073709551615",
    },
    tool = "verific",
    deps = [":br_counter"],
)

verilog_lint_test(
    name = "br_counter_64bit_lint_test",
    params = {
        "MaxValueWidth": "64",
        "MaxChangeWidth": "64",
        "MaxValue": "64'd18446744073709551615",
        "MaxChange": "64'd18446744073709551615",
    },
    tool = "ascentlint",
    deps = [":br_counter"],
)
