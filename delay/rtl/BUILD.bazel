# Copyright 2024 The Bedrock-RTL Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_hdl//verilog:providers.bzl", "verilog_library")
load("//bazel:verilog.bzl", "verilog_elab_test", "verilog_lint_test")

package(default_visibility = ["//visibility:public"])

verilog_library(
    name = "br_delay",
    srcs = ["br_delay.sv"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_registers",
    ],
)

verilog_library(
    name = "br_delay_nr",
    srcs = ["br_delay_nr.sv"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_registers",
    ],
)

verilog_library(
    name = "br_delay_valid",
    srcs = ["br_delay_valid.sv"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_registers",
    ],
)

verilog_library(
    name = "br_delay_valid_next",
    srcs = ["br_delay_valid_next.sv"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_registers",
    ],
)

verilog_library(
    name = "br_delay_valid_next_nr",
    srcs = ["br_delay_valid_next_nr.sv"],
    deps = [
        "//macros:br_asserts_internal",
        "//macros:br_registers",
    ],
)

verilog_elab_test(
    name = "br_delay_elab_test",
    top = "br_delay",
    deps = [":br_delay"],
)

verilog_elab_test(
    name = "br_delay_nr_elab_test",
    top = "br_delay_nr",
    deps = [":br_delay_nr"],
)

verilog_elab_test(
    name = "br_delay_valid_elab_test",
    top = "br_delay_valid",
    deps = [":br_delay_valid"],
)

verilog_elab_test(
    name = "br_delay_valid_next_elab_test",
    top = "br_delay_valid_next",
    deps = [":br_delay_valid_next"],
)

verilog_elab_test(
    name = "br_delay_valid_next_nr_elab_test",
    top = "br_delay_valid_next_nr",
    deps = [":br_delay_valid_next_nr"],
)

verilog_lint_test(
    name = "br_delay_lint_test",
    deps = [":br_delay"],
)

verilog_lint_test(
    name = "br_delay_nr_lint_test",
    deps = [":br_delay_nr"],
)

verilog_lint_test(
    name = "br_delay_valid_lint_test",
    deps = [":br_delay_valid"],
)

verilog_lint_test(
    name = "br_delay_valid_next_lint_test",
    deps = [":br_delay_valid_next"],
)

verilog_lint_test(
    name = "br_delay_valid_next_nr_lint_test",
    deps = [":br_delay_valid_next_nr"],
)
