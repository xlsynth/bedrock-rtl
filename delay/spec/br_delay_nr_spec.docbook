<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>Bedrock-RTL Delay Line (No Reset) Specification</title>
<date>2024-10-16</date>
</info>
<section xml:id="_overview">
<title>Overview</title>
<simpara>The <literal>br_delay_nr</literal> module implements a configurable delay line that delays an input signal <literal>in</literal> by a fixed number of clock cycles specified by the <literal>NumStages</literal> parameter. The delayed signal is output on <literal>out</literal>. If <literal>NumStages</literal> is 0, the output <literal>out</literal> is directly connected to the input <literal>in</literal> without any delay. The module supports a parameterizable bit width of the input and output signals through the <literal>BitWidth</literal> parameter. Unlike <literal>br_delay</literal>, this variant does not include a reset signal, and the pipeline registers are not reset.</simpara>
</section>
<section xml:id="_parameters">
<title>Parameters</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="4">
<colspec colname="col_1" colwidth="16.6666*"/>
<colspec colname="col_2" colwidth="16.6666*"/>
<colspec colname="col_3" colwidth="16.6666*"/>
<colspec colname="col_4" colwidth="50.0002*"/>
<thead>
<row>
<entry align="left" valign="top">Parameter</entry>
<entry align="left" valign="top">Type</entry>
<entry align="left" valign="top">Scope</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal>BitWidth</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>int</literal></simpara></entry>
<entry align="left" valign="top"><simpara>module</simpara></entry>
<entry align="left" valign="top"><simpara>Must be at least 1. Specifies the bit width of the input and output signals.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal>NumStages</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>int</literal></simpara></entry>
<entry align="left" valign="top"><simpara>module</simpara></entry>
<entry align="left" valign="top"><simpara>Must be at least 0. Specifies the number of pipeline stages (delay cycles).</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="_interfaces">
<title>Interfaces</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="5">
<colspec colname="col_1" colwidth="14.2857*"/>
<colspec colname="col_2" colwidth="14.2857*"/>
<colspec colname="col_3" colwidth="14.2857*"/>
<colspec colname="col_4" colwidth="14.2857*"/>
<colspec colname="col_5" colwidth="42.8572*"/>
<thead>
<row>
<entry align="left" valign="top">Interface</entry>
<entry align="left" valign="top">Port Direction</entry>
<entry align="left" valign="top">Port Type</entry>
<entry align="left" valign="top">Port Name</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Clock</simpara></entry>
<entry align="left" valign="top"><simpara><literal>input</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>logic</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>clk</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Clock signal.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Reset</simpara></entry>
<entry align="left" valign="top"><simpara><literal>input</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>logic</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>rst</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Synchronous active-high reset signal. Only used for assertions.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Data Input</simpara></entry>
<entry align="left" valign="top"><simpara><literal>input</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>logic [BitWidth-1:0]</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>in</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Input signal to be delayed.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Data Output</simpara></entry>
<entry align="left" valign="top"><simpara><literal>output</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>logic [BitWidth-1:0]</literal></simpara></entry>
<entry align="left" valign="top"><simpara><literal>out</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Delayed output signal.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section xml:id="_functional_behavior">
<title>Functional Behavior</title>
<itemizedlist>
<listitem>
<simpara>The module delays the input <literal>in</literal> by <literal>NumStages</literal> clock cycles.</simpara>
</listitem>
<listitem>
<simpara>The pipeline registers do not have a reset; their initial contents are undefined upon power-up.</simpara>
</listitem>
<listitem>
<simpara>For each clock cycle:</simpara>
<itemizedlist>
<listitem>
<simpara>The input <literal>in</literal> is sampled on the rising edge of <literal>clk</literal> and progresses through the pipeline stages.</simpara>
</listitem>
<listitem>
<simpara>The output <literal>out</literal> reflects the value of <literal>in</literal> from <literal>NumStages</literal> cycles earlier:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>out(t) = in(t - NumStages)</literal> for <literal>t â‰¥ NumStages</literal>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Before <literal>NumStages</literal> cycles have elapsed since power-up, the output <literal>out</literal> will reflect the initial contents of the uninitialized pipeline registers, which are undefined.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_latency_and_throughput">
<title>Latency and Throughput</title>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="20*"/>
<colspec colname="col_2" colwidth="20*"/>
<colspec colname="col_3" colwidth="60*"/>
<thead>
<row>
<entry align="left" valign="top">Latency Metric</entry>
<entry align="left" valign="top">Cycles</entry>
<entry align="left" valign="top">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>Data Delay</simpara></entry>
<entry align="left" valign="top"><simpara><literal>NumStages</literal></simpara></entry>
<entry align="left" valign="top"><simpara>The output <literal>out</literal> reflects the input <literal>in</literal> delayed by <literal>NumStages</literal> clock cycles.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Throughput</simpara></entry>
<entry align="left" valign="top"><simpara>1</simpara></entry>
<entry align="left" valign="top"><simpara>The module can accept and process a new input every clock cycle.</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Initialization Latency</simpara></entry>
<entry align="left" valign="top"><simpara><literal>NumStages</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Since the pipeline registers are not reset, the output <literal>out</literal> will be undefined for the first <literal>NumStages</literal> cycles after power-up.</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
</article>